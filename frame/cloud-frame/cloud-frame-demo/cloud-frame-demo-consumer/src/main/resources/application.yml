spring:
  application:
    name: cloud-frame-demo-consumer

server:
  port: 8091

endpoints:
  restart:
    enabled: true

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
    hostname: registry
    prefer-ip-address: true
#    metadata-map:
#      user.name: ${security.user.name}
#      user.password: ${security.user.password}
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      defaultZone: http://user:${REGISTRY_SERVER_PASSWORD:password}@registry:8761/eureka/

## 默认hystrix禁用
ribbon:
##请求处理的超时时间
  ReadTimeout: 10000
##请求连接的超时时间
  ConnectTimeout: 5000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1

# 不配置则FeignClient的callback不起作用
feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true

hystrix.command.default.execution.timeout.enabled: false

# Hystrix默认的超时时间是1秒，如果超过这个时间尚未响应，将会进入fallback代码; 这里修改超时时间
# 让Hystrix的超时时间改为60秒
# hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
# 禁用Hystrix的超时时间
#        timeout:
#          enabled: false
#hystrix:
#  command:
#    default:
#      circuitBreaker:
#        sleepWindowInMilliseconds: 100000
#        forceClosed: true
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 600000


logging:
  file: logs/conumer1.log
  config: classpath:spring/logback-spring.xml
  level:
    com.cloud.frame.demo.consumer: DEBUG
  pattern:
    console: "[%d{HH:mm:ss.SSS}] [%thread] [%X{traceid}] [%-5level] %logger{36} - %msg%n"


